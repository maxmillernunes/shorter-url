name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  # 🔍 LINT STAGE
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Setup Node.js (LTS 22)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      # 3️⃣ Setup pnpm
      - name: Setup pnpm
        run: corepack enable && corepack prepare pnpm@latest --activate

      # 4️⃣ Install dependencies
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # ✅ Ignore test files in lint
      - name: Run lint
        run: npx eslint "{src,apps,libs}/**/*.ts" --ignore-pattern "test/**" --ignore-pattern "**/*.spec.ts" --fix

  # 🏗️ BUILD STAGE
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Setup pnpm
        run: corepack enable && corepack prepare pnpm@latest --activate

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # ✅ Generate Prisma Client before build
      - name: Generate Prisma Client
        run: pnpm prisma generate

      - name: Build application
        run: pnpm build

  # 🧪 UNIT TEST STAGE
  test-unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Setup pnpm
        run: corepack enable && corepack prepare pnpm@latest --activate

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # ✅ Generate Prisma Client for unit tests
      - name: Generate Prisma Client
        run: pnpm prisma generate

      - name: Run unit tests
        run: pnpm test

  # 🚀 E2E TEST STAGE
  test-e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: test-unit

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U testuser -d testdb"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpassword
      POSTGRES_DB: testdb
      DATABASE_URL: postgres://testuser:testpassword@localhost:5432/testdb
      JWT_PRIVATE_KEY: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQ242Um51WlVsbDREcmIKeXg4MEw4YVJiNU5MRWxja29yTXFmdStkWWdWTER3RmU2Zk5Pbmo5bkYwbHdYQ2JBTjBzQlBFVjFKcEd0RnN3OApJR2doQ2o4OWNORGFJUTJLSTM0VUNaVXNXSnNoUm04MW5zTldDbFF6RkZOcW5kVWt1VWNjUzJPUEk0OGpXbzF3CnYwdXV4SGRxMnJhNlY0eXdYMFhsRjFIcjMzY2I2dUx0N1JKN01vRmw2RUlYMmIxL1V0OTFlYzNtUmRLbEZNTHkKd3IxY2ZrdDJGQU1RZFJQOWJqZXNRU0FHaFQvSnBKQUtSUjY5OWxTN0lKK3k3a2NVUmF0V3BXbEpoRWRwQ0hicQpIKzYxQ2VEeWd4WG5wczZjcnpLZ3RRbFEwN1V3NTdXSWNJZzhMYkhYemI1OXlOWEQ1ZHh2a1pCSWpDZTJBc0VSCklNQStEQzdOQWdNQkFBRUNnZ0VBQThUUXB6QXcwSStTNHFJUmhqdFlTcVZsZWZia2E5Y1hER29pK0xaZGhnekYKTEJzMk1kcU5jOFByQ3hHV2NSUU1vKzkxWTZiRStFeWRzdS9MUm9xVFZzNjBjV0R5aTlvMkZ6OEwwUjRBQldRdQpWTmJHYmFUM3RObk04WVN2Wnc2ZGtQNEVNdzlLUkRIaElObTZXaWJndzA0N2NiMUxWQjRmVklBTWY2M1pYNUFCCnp1elkvOFVDVTFleUoxc2p6RUFqa3A1TFBERjJ2czZrWjZ0L3FYSnVHQjZUeUdkTzNiWENTdXJwTnp5MnY1N2YKL1pOWkVjU0IzOVMzbjE5bVdGOU56c2xkK0pjTU1XL1dCMFNXNU1uYXp4cy9weEloZzVDbFFoSWdsTVJ1RG1XQgpac2NJSlE4SWpOL2VnU0tCUE5rTzFFQkNaQUFUNU9lNEx6TzdYSUdjd1FLQmdRREx1QWFXQTBCVEhWSjk5QUpUCkxhb3BOL1IrVG16S3lBRUNxWm1vQ25KcnFzOGtVMzFRQkRxVlh4MnVYL2xSeDhGMFR4L3dYRks3THlTeEZkU3cKcEltS1RHVnozVEhUWVNOSUQvVHgrQTJJM25vTjE5TjgvU3h5Z21LaS9yaDJEZ094eXA0NDdwMlgvRGNzWjJEdQpTRnlLSlZzdEJHcWRheXBPVTNEZ1F3blZzUUtCZ1FEVEFJaFpOUEZMU1JwM05ZcWtCNGhmY09JWVZ5a1loZjU3CmZUWnRDcTEwZnNDZmtYRzI2djhUZWxua2ZFVHRiVlI0YVVxbzRScUdoTDd4TlYrWTZaNHFFdXZGRE1hUjRVRlcKci9IZ2Vyazg3NmNZQkdDSHpMc3EyVmFqRTNRSWhVdHNvaE04cW5idlBITlpzMkZtZHNrL1JFZXQ0Vit3RDJUZwpPR1RFOXRaRjNRS0JnRjBsRmpYTzVNRmIzZFRqRlpFTWh3bnpvS0dEb0RDVGhBckFteFgvT05QTHRJeHFkQmg2CjVvSlhqQTJucWlwZlNDK3k0ZXFYZStoRUpPV25FcWwxZ2NHdkxvL3NhaFM1REZXdG5oUm9rMStxUVdwRTdWanYKdFR2aUs5RlUzK2h5ZmZQenJhWmdTOFFyT05yZnBhMHRmc3BYVERub0ZBdEg3WDhFbmM2Y09FbnhBb0dCQUpUOApoRW9RNHV2WTAzSW5BUnp2SUxEYllSbjB1VlRTa0MwYjdZa3pCK1VBOXZ2MDA4bG54dkkyNnpBMU91bzJ6M1V5ClM0QlJhY3hnQVA4S1E5VVI2QmNuUXdqaEMzaklCNzJ4QUdZVDRhWVFSZmprWmxDZEUrK2VoTmtqREVSVDhqemoKZUJmVythSFZHbEhWSWtvYVIrRi9VZW1LQUdtdGhQbjVkOVhId09hVkFvR0JBSlc5aDY5WGpuYisxOS9ZN1ozRAppSHYycTd2TDh0dFpuVFczNjhWSmUxMURwUnQyRyt4bDN1TmttN01VU1ppL3poVjhmYmtvWmdPN09RdjFQMmI5CkpnWXlOOUdCR3JLYVVGRlpWUUo1ZlhXeUVNZDhtN3ptcmxYVm1VQVY3TS9GV05MQ2ZYS2F1emlNTkRmTzVLZmkKL28yd1MvcWVTR3ovTnVKVXZJSkdMMTVVCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
      JWT_PUBLIC_KEY: LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFwK2taN21WSlplQTYyOHNmTkMvRwprVytUU3hKWEpLS3pLbjd2bldJRlN3OEJYdW56VHA0L1p4ZEpjRndtd0RkTEFUeEZkU2FSclJiTVBDQm9JUW8vClBYRFEyaUVOaWlOK0ZBbVZMRmliSVVadk5aN0RWZ3BVTXhSVGFwM1ZKTGxISEV0amp5T1BJMXFOY0w5THJzUjMKYXRxMnVsZU1zRjlGNVJkUjY5OTNHK3JpN2UwU2V6S0JaZWhDRjltOWYxTGZkWG5ONWtYU3BSVEM4c0s5WEg1TApkaFFERUhVVC9XNDNyRUVnQm9VL3lhU1FDa1VldmZaVXV5Q2ZzdTVIRkVXclZxVnBTWVJIYVFoMjZoL3V0UW5nCjhvTVY1NmJPbks4eW9MVUpVTk8xTU9lMWlIQ0lQQzJ4MTgyK2ZjalZ3K1hjYjVHUVNJd250Z0xCRVNEQVBnd3UKelFJREFRQUIKLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg==

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Setup pnpm
        run: corepack enable && corepack prepare pnpm@latest --activate

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Wait for Postgres to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U $POSTGRES_USER; do
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Generate Prisma Client
        run: pnpm prisma generate

      - name: Run E2E tests
        run: pnpm test:e2e